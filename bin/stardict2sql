#!/usr/bin/env php
<?php

require_once dirname(__FILE__) . '/../vendor/autoload.php';

error_reporting(E_ALL);

use skoro\stardict\Info;
use skoro\stardict\Index;
use skoro\stardict\Dict;
use skoro\stardict\PDOConverter;

$script_name = array_shift($argv);

if (in_array('--help', $argv)) {
    echo <<<EOF

Convert StarDict dictionary to SQL insert queries.

Usage:   {$script_name} [OPTIONS] dsn .ifo

Example:

1. Import dictionary to SQLite database file "/tmp/stardict.sq3":

    {$script_name} --init-schema sqlite:/tmp/stardict.sq3 ru-en.ifo
    
2. Import dictionary to MySQL database "stardict":

    {$script_name} --init-schema --username dbuser --password dbpass \
                            "mysql:host=localhost;dbname=stardict" ru-en.ifo

Available options are:
    
    --help              This help.
    --init-schema       Create initial tables schema, by default schema not created.
    --table-dicts       Dictionary table name, by default "dicts".
    --table-words       Words table name, by default "words".
    --table-dict-words  Table name for links between dict and words, by default "dict_words".
    --username          Database user name.
    --password          Database user password.
    --no-transaction    Disable transaction.


EOF;
    exit;
}

/**
 * Abort application execution.
 * @param string $message
 */
function abort($message) {
    global $script_name;
    echo $script_name . ': Error: ' . $message . PHP_EOL;
    exit(1);
}

/**
 * Get option parameter.
 * @param string $name option name.
 * @return string
 */
function get_cmd_param($name) {
    global $argv;
    if (!($option = array_shift($argv))) {
        abort(sprintf('option "%s" requires a value.', $name));
    }
    return $option;
}

$file = ''; // Input .ifo file.
$dsn = '';
$user = null;
$password = null;
$convParams = [];
$opts = [];

while ($option = array_shift($argv)) {
    if (strpos($option, '--') === 0 && strpos($option, '=') !== false) {
        list($option, $value) = explode('=', $option, 2);
        array_unshift($argv, $value);
    }
    switch ($option) {
        case '--init-schema':
            $convParams['initSchema'] = true;
            break;
            
        case '--table-dict':
            $convParams['tableDicts'] = get_cmd_param('--table-dicts');
            break;
            
        case '--table-word':
            $convParams['tableWords'] = get_cmd_param('--table-words');
            break;
            
        case '--table-dict-words':
            $convParams['tableDictWords'] = get_cmd_param('--table-dict-words');
            break;
            
        case '--username':
            $user = get_cmd_param('--username');
            break;
        
        case '--password':
            $password = get_cmd_param('--password');
            break;
        
        case '--no-transaction':
            $convParams['transaction'] = false;
            break;
        
        default:
            if (strpos($option, '--') === 0) {
                abort('unrecognized option "' . $option . '"');
            }
            $opts[] = $option;
            break;
    }
}

@list($dsn, $file, ) = $opts;

if (empty($dsn)) {
    abort('DSN required.');
}
if (empty($file)) {
    abort('StarDict .ifo file name required.');
}

(new PDOConverter($file))
    ->setPDO(new PDO($dsn, $user, $password))
    ->convert($convParams);

