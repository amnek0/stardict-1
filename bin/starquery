#!/usr/bin/env php
<?php

require_once dirname(__FILE__) . '/../vendor/autoload.php';

error_reporting(E_ALL);

use skoro\stardict\Info;
use skoro\stardict\Index;
use skoro\stardict\Dict;
use skoro\stardict\Console;

const OUTPUT_DATA = 1;
const OUTPUT_WORDS = 2;

$console = Console::getInstance();
$script = $console->getScriptName();
$dicts = [];
$words = [];
$output = OUTPUT_DATA;

/**
 * Show usage information.
 */
function usage() {
    global $script;
?>
StarDict query tool.

Usage:  <?= $script ?> [OPTIONS] word [word ...]

Example:

1. Query data for word "blablabla" in dictionary "stardict":

    <?= $script ?> --dict stardict blablabla

2. Query data for words "foo" and "blablabla" in dictionaries "one", "two", "three":
    
    <?= $script ?> --dict one --dict two --dict three foo blablabla
    
3. Query data in all dictionaries in current directory:
    
    <?= $script ?> blablabla

Available options are:

    --help  This help.
    --dict  Dictionary .ifo file (extension .ifo may be omit).
    --words Show list of words in dictionary.

<?php
    exit;
}

/**
 * @param string $filename
 * @return Dict
 */
function openDict($filename) {
    global $console;
    try {
        $dict = new Dict(new Index(new Info($filename)));
    } catch (\skoro\stardict\Exception $e) {
        $console->abort(sprintf('%s: %s', $e->getInfo()->getFileName(), $e->getMessage()));
    }
    return $dict;
}

function dictName($dict) {
    return $dict->getInfo()->bookname . PHP_EOL .
        '====================' . PHP_EOL;
}

if ($console->checkArg('--help')) {
    usage();
}

// Parse command line arguments.
while ($option = $console->getCommandArg()) {
    switch ($option) {
        case '--dict':
            $dicts[] = openDict($console->getOptionParam($option));
            break;

        case '--words':
            $output = OUTPUT_WORDS;
            break;
            
        default:
            if (strpos($option, '--') === 0) {
                $console->abort('unrecognized option "' . $option . '"');
            }
            $words[] = $option;
            break;
    }
}

if ($output === OUTPUT_DATA && empty($words)) {
    $console->abort('one or more words required.');
}

// Load dictionaries from current directory.
if (empty($dicts)) {
    foreach (glob('*.ifo') as $filename) {
        $dicts[] = openDict($filename);
    }
    if (empty($dicts)) {
        $console->abort('no dictionary found.');
    }
}

foreach ($dicts as $dict) {
    switch ($output) {
        // Query words
        case OUTPUT_DATA:
            foreach ($words as $word) {
                if ($data = $dict->lookup($word)) {
                    echo dictName($dict);
                    foreach ($data as $word => $chunk) {
                        echo '>>>  ' . $word . '  <<<' . PHP_EOL;
                        echo $chunk . PHP_EOL . PHP_EOL;
                    }
                }
            }
            break;
        
        // All words in dictionary.
        case OUTPUT_WORDS:
            echo dictName($dict);
            foreach ($dict->getIndex() as $word => $data) {
                echo $word . PHP_EOL;
            }
            break;
    }
}

